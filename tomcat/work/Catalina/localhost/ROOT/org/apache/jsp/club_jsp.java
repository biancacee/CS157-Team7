/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2023-10-17 01:40:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class club_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <title>ClubSpartan</title>\n");
      out.write("    \n");
      out.write("        <!-- Includes -->\n");
      out.write("        <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n");
      out.write("        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n");
      out.write("        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <!-- Navbar -->\n");
      out.write("        <nav style=\"background-color:#687494\">\n");
      out.write("            <div class=\"nav-wrapper container\">\n");
      out.write("              <ul id=\"nav-mobile\" class=\"left hide-on-med-and-down\">\n");
      out.write("                <li><a href=\"index.jsp\">Home</a></li>\n");
      out.write("                <li><a href=\"log-in\">Log In</a></li>\n");
      out.write("                <li><a href=\"sign-up\">Sign Up</a></li>\n");
      out.write("              </ul>\n");
      out.write("            </div>\n");
      out.write("        </nav>\n");
      out.write("\n");
      out.write("        <!-- Get Club -->\n");
      out.write("        ");

        try 
        {
            String id = request.getParameter("id");

            java.sql.Connection con;
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:"+"3306"+"/clubspartan?autoReconnect=true&useSSL=false", "root", "Million95!");

            PreparedStatement stmt = con.prepareStatement("SELECT * FROM club WHERE club_id = ?");
            stmt.setString(1, id);
            ResultSet rs = stmt.executeQuery();
            rs.next();

            PreparedStatement stmt_rate = con.prepareStatement("SELECT rating FROM rate WHERE club_id = ?");
            stmt_rate.setString(1, id);
            ResultSet rs_rate = stmt_rate.executeQuery();

            int count = 0;
            float avg_rating = 0;
            while(rs_rate.next())
            {
                avg_rating += rs_rate.getInt(1);
                count++;
            }
            if(count > 0)
                avg_rating /= count; 

            PreparedStatement stmt_review = con.prepareStatement("SELECT review_id, user_id, title, description FROM review WHERE club_id = ?");
            stmt_review.setString(1, id);
            ResultSet rs_review = stmt_review.executeQuery();
        
      out.write("\n");
      out.write("\n");
      out.write("        <!-- Club -->\n");
      out.write("        <div style=\"background-color:#e9ecee\">\n");
      out.write("            <div class=\"container center-align\" style=\"padding: 15px;\">\n");
      out.write("                <h4>");
      out.print( rs.getString(2) );
      out.write("</h4>\n");
      out.write("\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col s7 push-s5 left-align\" style=\"padding: 15px; padding-left: 20px;\">\n");
      out.write("                        ");
 if(avg_rating != 0) { 
      out.write("\n");
      out.write("                            <div><b>Rating: </b>");
      out.print( avg_rating );
      out.write("</div>\n");
      out.write("                        ");
 } else { 
      out.write(" \n");
      out.write("                            <div><b>Rating: </b>No Rating</div>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                        <hr />\n");
      out.write("                        <b>Contact Email: </b><a href=");
      out.print( "mailto: " + rs.getString(4) );
      out.write('>');
      out.print( rs.getString(4) );
      out.write("</a><br/>\n");
      out.write("                        ");
 
                            if(rs.getString(6) != null) {
                        
      out.write("\n");
      out.write("                            <b>Instagram Link: </b><a href=");
      out.print( rs.getString(6) );
      out.write('>');
      out.print( rs.getString(6) );
      out.write("</a><br/>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                        ");
 
                            if(rs.getString(5) != null) {
                        
      out.write("\n");
      out.write("                            <b>Discord Link: </b><a href=");
      out.print( rs.getString(5) );
      out.write('>');
      out.print( rs.getString(5) );
      out.write("</a><br/>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                        <hr />\n");
      out.write("                        <p>");
      out.print( rs.getString(7) );
      out.write("</p>\n");
      out.write("                        <hr />\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                                    <!-- Modal Trigger -->\n");
      out.write("                            <a class=\"waves-effect waves-light btn modal-trigger\" style=\"background-color:#687494\" href=\"#modal\"><i class=\"material-icons left\">offline_pin</i>Rate</a>\n");
      out.write("\n");
      out.write("                            <!-- Modal Structure -->\n");
      out.write("                            <div id=\"modal\" class=\"modal\">\n");
      out.write("                                <div class=\"modal-content\">\n");
      out.write("                                    <h4>Rate the Club</h4>\n");
      out.write("                                    <p style=\"padding-top:10px\">\n");
      out.write("                                        <div class=\"rating center-align\" id=\"star-rating\">\n");
      out.write("                                            <div style=\"font-size: 30px;\">Overall experience</div>\n");
      out.write("                                            <span class=\"star\" data-rating=\"1\"></span>\n");
      out.write("                                            <span class=\"star\" data-rating=\"2\"></span>\n");
      out.write("                                            <span class=\"star\" data-rating=\"3\"></span>\n");
      out.write("                                            <span class=\"star\" data-rating=\"4\"></span>\n");
      out.write("                                            <span class=\"star\" data-rating=\"5\"></span>\n");
      out.write("                                        </div>\n");
      out.write("                                        \n");
      out.write("                                    </p>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"modal-footer\">\n");
      out.write("                                    <a href=\"#!\" class=\"modal-action modal-close waves-effect waves-green btn-flat\">Agree</a>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col left-align\"><a href=");
      out.print( "review.jsp?club_id=" + id);
      out.write(" style=\"background-color:#687494\" class=\"waves-effect waves-light btn\"><i class=\"material-icons left\">border_color</i>Write Review</a></div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col s5 pull-s7 right-align\" style=\"padding: 15px; padding-right: 20px;\">\n");
      out.write("                        <img style=\"object-fit: cover; width: 260px; height: 260px;\" src=");
      out.print( rs.getString(3) );
      out.write(">\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Reviews -->\n");
      out.write("        <div class=\"container\" style=\"margin-top: 20px;\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                ");
 int review_count = 0; while(rs_review.next()) {
      out.write("\n");
      out.write("                    <div class=\"col s6 offset-s3\">\n");
      out.write("                    <div class=\"card\">\n");
      out.write("                        <div class=\"card-content\">\n");
      out.write("                        <span class=\"card-title\">");
      out.print( rs_review.getString(3) );
      out.write("</span>\n");
      out.write("                        <p>");
      out.print( rs_review.getString(4) );
      out.write("</p>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"card-action\">\n");
      out.write("                        <a href=");
      out.print( "like.jsp?club_id=" + id);
      out.write(" class=\"waves-effect waves-teal btn-flat\"><i class=\"material-icons left Small\">thumb_up</i>0 Likes</a>\n");
      out.write("                        <a href=\"comment.jsp\" class=\"waves-effect waves-teal btn-flat\"><i class=\"material-icons left Small\">comment</i>Comment</a>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    </div>\n");
      out.write("                ");
 review_count++; } 
      out.write("\n");
      out.write("                ");
 if(review_count == 0) {
      out.write("\n");
      out.write("                    <h3 class=\"center-align\">No Reviews...</h3>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        ");

            rs.close();
            rs_rate.close();
            rs_review.close();
            stmt.close();
            stmt_rate.close();
            stmt_review.close();
            con.close();
        }
        catch(SQLException e) 
        {
            out.println("SQLException caught: " + e.getMessage());
        }
        
      out.write("\n");
      out.write("        <script type=\"text/javascript\" src=\"js/materialize.min.js\"></script>\n");
      out.write("        <!-- Needed for Modal review -->\n");
      out.write("        <script>\n");
      out.write("            const stars = document.querySelectorAll(\".star\");\n");
      out.write("        \n");
      out.write("            stars.forEach(star => {\n");
      out.write("                star.addEventListener(\"mouseenter\", () => {\n");
      out.write("                    const rating = parseInt(star.getAttribute(\"data-rating\"));\n");
      out.write("                    stars.forEach(s => {\n");
      out.write("                        const sRating = parseInt(s.getAttribute(\"data-rating\"));\n");
      out.write("                        if (sRating <= rating) {\n");
      out.write("                            s.classList.add(\"filled\");\n");
      out.write("                        } else {\n");
      out.write("                            s.classList.remove(\"filled\");\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                });\n");
      out.write("        \n");
      out.write("                star.addEventListener(\"mouseleave\", () => {\n");
      out.write("                    // Clear all stars when the mouse leaves the rating area\n");
      out.write("                    stars.forEach(s => {\n");
      out.write("                        s.classList.remove(\"filled\");\n");
      out.write("                    });\n");
      out.write("                });\n");
      out.write("        \n");
      out.write("                star.addEventListener(\"click\", () => {\n");
      out.write("                    // Set the rating when a star is clicked\n");
      out.write("                    const rating = parseInt(star.getAttribute(\"data-rating\"));\n");
      out.write("                    // Perform any additional action on clicking if needed\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <!-- Needed for Modal -->\n");
      out.write("        <script>\n");
      out.write("            $(document).ready(function(){\n");
      out.write("            $('#modal').modal();\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
